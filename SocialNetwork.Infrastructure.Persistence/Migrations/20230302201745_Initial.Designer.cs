// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetwork.Infrastructure.Persistence.Contexts;

#nullable disable

namespace SocialNetwork.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230302201745_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entities.Amigos", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Usuarios")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuarios2")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Usuarios");

                    b.HasIndex("Id_Usuarios2");

                    b.ToTable("Amigos", (string)null);
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entities.Comentarios", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Publicacion")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Comentarios", (string)null);
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entities.Publicaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Id_Usuarios")
                        .HasColumnType("int");

                    b.Property<string>("Img_Miniatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Informacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture_Caption")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Usuarios");

                    b.ToTable("Publicaciones", (string)null);
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entities.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_Profile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verificado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entities.Amigos", b =>
                {
                    b.HasOne("SocialNetwork.Core.Domain.Entities.Usuarios", "Usuarios")
                        .WithMany("Amigos")
                        .HasForeignKey("Id_Usuarios")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialNetwork.Core.Domain.Entities.Usuarios", "Usuarios2")
                        .WithMany("Amigos2")
                        .HasForeignKey("Id_Usuarios2")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuarios");

                    b.Navigation("Usuarios2");
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entities.Comentarios", b =>
                {
                    b.HasOne("SocialNetwork.Core.Domain.Entities.Publicaciones", "Publicaciones")
                        .WithMany("Pcomentarios")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialNetwork.Core.Domain.Entities.Usuarios", "Usuarios")
                        .WithMany("Comentarios")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicaciones");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entities.Publicaciones", b =>
                {
                    b.HasOne("SocialNetwork.Core.Domain.Entities.Usuarios", "Usuarios")
                        .WithMany("Publicaciones")
                        .HasForeignKey("Id_Usuarios")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entities.Publicaciones", b =>
                {
                    b.Navigation("Pcomentarios");
                });

            modelBuilder.Entity("SocialNetwork.Core.Domain.Entities.Usuarios", b =>
                {
                    b.Navigation("Amigos");

                    b.Navigation("Amigos2");

                    b.Navigation("Comentarios");

                    b.Navigation("Publicaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
